;; https://en.wikibooks.org/wiki/Scheme_Programming/Input_and_Output
(define (read-byte . opt)
    (let ((c (apply read-char opt)))
    (if (eof-object? c) c (char->integer c))))

(define (write-byte int . opt)
    (apply write-char (integer->char int) opt))

(define (peek-byte . opt)
    (let ((c (apply peek-char opt)))
    (if (eof-object? c) c (char->integer c))))

(define byte-ready? char-ready?)

(define (byte->bits byte)
    (do ((i 7 (- i 1)))
        ((= i -1))
        (format #t "~a ~a~%" i (logbit? i byte))))

(define (test)
    (let ((in (open-input-file "../binary.bin")))
        (display (byte->bits (read-byte in)))))
        
;(peek-byte in)
;(byte-ready? in)

;; http://www.r6rs.org/final/html/r6rs-lib/r6rs-lib-Z-H-7.html#node_chap_6
(define-record-type binary-reader
    (fields
        (mutable index)))

(define (read-bit binary-reader)
    nil
    )

;; http://www.r6rs.org/final/html/r6rs-lib/r6rs-lib-Z-H-9.html#node_sec_8.2.8
;; (get-bytevector-all binary-input-port)
