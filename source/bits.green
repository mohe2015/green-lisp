;; https://en.wikibooks.org/wiki/Scheme_Programming/Input_and_Output
(define (read-byte . opt)
    (let ((c (apply read-char opt)))
    (if (eof-object? c) c (char->integer c))))

(define (write-byte int . opt)
    (apply write-char (integer->char int) opt))

(define (peek-byte . opt)
    (let ((c (apply peek-char opt)))
    (if (eof-object? c) c (char->integer c))))

(define byte-ready? char-ready?)


;(define (byte->bits byte)
    

(define (test)
    (let ((in (open-input-file "../binary.bin")))
        (do ((i 0 (+ 1 i)))
            ((= i 8))
            (format #t "~a~%" i))))

;     (display (read-byte in))))
        
;(peek-byte in)
;(byte-ready? in)
